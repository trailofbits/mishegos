#!/usr/bin/env ruby
# frozen_string_literal: true

# filter-xed-find-underaccept: find inputs that XED potentially underaccepts
# (i.e., inputs the other high-quality decoders think are valid)

require "json"

# TODO(ww): Remove this.
BDDISASM_SO = "./src/worker/bddisasm/bddisasm.so"

STDERR.puts "[+] pass: filter-bddisasm-salc"

count = 0
STDIN.each_line do |line|
  result = JSON.parse line, symbolize_names: true

  bddisasm = result[:outputs].find { |o| o[:worker_so] == BDDISASM_SO }

  if bddisasm[:result] == "SALC"
    count += 1
    next
  end

  STDOUT.puts result.to_json
end

STDERR.puts "[+] pass: filter-bddisasm-salc done: #{count} filtered"
